{
  "id": "2b0ca59e-4238-4f84-993f-36be918f5804",
  "prevId": "9c78936a-727a-415a-804b-8f91ff74c80d",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.definitions": {
      "name": "definitions",
      "schema": "",
      "columns": {
        "term": {
          "name": "term",
          "type": "varchar",
          "primaryKey": true,
          "notNull": true
        },
        "definition": {
          "name": "definition",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.embeddings": {
      "name": "embeddings",
      "schema": "",
      "columns": {
        "point_id": {
          "name": "point_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(384)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "embeddings_point_id_points_id_fk": {
          "name": "embeddings_point_id_points_id_fk",
          "tableFrom": "embeddings",
          "tableTo": "points",
          "columnsFrom": [
            "point_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.endorsements": {
      "name": "endorsements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "cred": {
          "name": "cred",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "point_id": {
          "name": "point_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "endorsements_user_id_index": {
          "name": "endorsements_user_id_index",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "endorsements_point_id_index": {
          "name": "endorsements_point_id_index",
          "columns": [
            {
              "expression": "point_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "endorsements_point_id_points_id_fk": {
          "name": "endorsements_point_id_points_id_fk",
          "tableFrom": "endorsements",
          "tableTo": "points",
          "columnsFrom": [
            "point_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "endorsements_user_id_users_id_fk": {
          "name": "endorsements_user_id_users_id_fk",
          "tableFrom": "endorsements",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.negations": {
      "name": "negations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "older_point_id": {
          "name": "older_point_id",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "newer_point_id": {
          "name": "newer_point_id",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "olderPointIndex": {
          "name": "olderPointIndex",
          "columns": [
            {
              "expression": "older_point_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "newerPointIndex": {
          "name": "newerPointIndex",
          "columns": [
            {
              "expression": "newer_point_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "negations_older_point_id_points_id_fk": {
          "name": "negations_older_point_id_points_id_fk",
          "tableFrom": "negations",
          "tableTo": "points",
          "columnsFrom": [
            "older_point_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "negations_newer_point_id_points_id_fk": {
          "name": "negations_newer_point_id_points_id_fk",
          "tableFrom": "negations",
          "tableTo": "points",
          "columnsFrom": [
            "newer_point_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "negations_created_by_users_id_fk": {
          "name": "negations_created_by_users_id_fk",
          "tableFrom": "negations",
          "tableTo": "users",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "uniqueNegation": {
          "name": "uniqueNegation",
          "nullsNotDistinct": false,
          "columns": [
            "older_point_id",
            "newer_point_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "olderPointFirst": {
          "name": "olderPointFirst",
          "value": "\"negations\".\"older_point_id\" < \"negations\".\"newer_point_id\""
        }
      },
      "isRLSEnabled": false
    },
    "public.points": {
      "name": "points",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "keywords": {
          "name": "keywords",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true,
          "default": "ARRAY[]::text[]"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.restake_history": {
      "name": "restake_history",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "restake_id": {
          "name": "restake_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "point_id": {
          "name": "point_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "negation_id": {
          "name": "negation_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "action": {
          "name": "action",
          "type": "restake_action",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "previous_amount": {
          "name": "previous_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "new_amount": {
          "name": "new_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "restake_history_restake_idx": {
          "name": "restake_history_restake_idx",
          "columns": [
            {
              "expression": "restake_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "restake_history_user_idx": {
          "name": "restake_history_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "restake_history_point_idx": {
          "name": "restake_history_point_idx",
          "columns": [
            {
              "expression": "point_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "restake_history_negation_idx": {
          "name": "restake_history_negation_idx",
          "columns": [
            {
              "expression": "negation_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "restake_history_restake_id_restakes_id_fk": {
          "name": "restake_history_restake_id_restakes_id_fk",
          "tableFrom": "restake_history",
          "tableTo": "restakes",
          "columnsFrom": [
            "restake_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "restake_history_user_id_users_id_fk": {
          "name": "restake_history_user_id_users_id_fk",
          "tableFrom": "restake_history",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "restake_history_point_id_points_id_fk": {
          "name": "restake_history_point_id_points_id_fk",
          "tableFrom": "restake_history",
          "tableTo": "points",
          "columnsFrom": [
            "point_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "restake_history_negation_id_points_id_fk": {
          "name": "restake_history_negation_id_points_id_fk",
          "tableFrom": "restake_history",
          "tableTo": "points",
          "columnsFrom": [
            "negation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.restakes": {
      "name": "restakes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "point_id": {
          "name": "point_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "negation_id": {
          "name": "negation_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "active_restake_idx": {
          "name": "active_restake_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "point_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "negation_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "restakes_user_idx": {
          "name": "restakes_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "restakes_point_idx": {
          "name": "restakes_point_idx",
          "columns": [
            {
              "expression": "point_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "restakes_negation_idx": {
          "name": "restakes_negation_idx",
          "columns": [
            {
              "expression": "negation_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "restakes_user_id_users_id_fk": {
          "name": "restakes_user_id_users_id_fk",
          "tableFrom": "restakes",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "restakes_point_id_points_id_fk": {
          "name": "restakes_point_id_points_id_fk",
          "tableFrom": "restakes",
          "tableTo": "points",
          "columnsFrom": [
            "point_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "restakes_negation_id_points_id_fk": {
          "name": "restakes_negation_id_points_id_fk",
          "tableFrom": "restakes",
          "tableTo": "points",
          "columnsFrom": [
            "negation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_active_restake": {
          "name": "unique_active_restake",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "point_id",
            "negation_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "amount_positive_constraint": {
          "name": "amount_positive_constraint",
          "value": "\"restakes\".\"amount\" > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.slash_history": {
      "name": "slash_history",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "slash_id": {
          "name": "slash_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "point_id": {
          "name": "point_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "negation_id": {
          "name": "negation_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "action": {
          "name": "action",
          "type": "slash_action",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "previous_amount": {
          "name": "previous_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "new_amount": {
          "name": "new_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "slash_history_slash_idx": {
          "name": "slash_history_slash_idx",
          "columns": [
            {
              "expression": "slash_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "slash_history_user_idx": {
          "name": "slash_history_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "slash_history_point_idx": {
          "name": "slash_history_point_idx",
          "columns": [
            {
              "expression": "point_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "slash_history_negation_idx": {
          "name": "slash_history_negation_idx",
          "columns": [
            {
              "expression": "negation_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "slash_history_slash_id_slashes_id_fk": {
          "name": "slash_history_slash_id_slashes_id_fk",
          "tableFrom": "slash_history",
          "tableTo": "slashes",
          "columnsFrom": [
            "slash_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "slash_history_user_id_users_id_fk": {
          "name": "slash_history_user_id_users_id_fk",
          "tableFrom": "slash_history",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "slash_history_point_id_points_id_fk": {
          "name": "slash_history_point_id_points_id_fk",
          "tableFrom": "slash_history",
          "tableTo": "points",
          "columnsFrom": [
            "point_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "slash_history_negation_id_points_id_fk": {
          "name": "slash_history_negation_id_points_id_fk",
          "tableFrom": "slash_history",
          "tableTo": "points",
          "columnsFrom": [
            "negation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.slashes": {
      "name": "slashes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "point_id": {
          "name": "point_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "negation_id": {
          "name": "negation_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "slashes_user_idx": {
          "name": "slashes_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "slashes_point_idx": {
          "name": "slashes_point_idx",
          "columns": [
            {
              "expression": "point_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "slashes_negation_idx": {
          "name": "slashes_negation_idx",
          "columns": [
            {
              "expression": "negation_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "slashes_user_id_users_id_fk": {
          "name": "slashes_user_id_users_id_fk",
          "tableFrom": "slashes",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "slashes_point_id_points_id_fk": {
          "name": "slashes_point_id_points_id_fk",
          "tableFrom": "slashes",
          "tableTo": "points",
          "columnsFrom": [
            "point_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "slashes_negation_id_points_id_fk": {
          "name": "slashes_negation_id_points_id_fk",
          "tableFrom": "slashes",
          "tableTo": "points",
          "columnsFrom": [
            "negation_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_active_slash": {
          "name": "unique_active_slash",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "point_id",
            "negation_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "amount_positive_constraint": {
          "name": "amount_positive_constraint",
          "value": "\"slashes\".\"amount\" > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar",
          "primaryKey": true,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "cred": {
          "name": "cred",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 200
        }
      },
      "indexes": {
        "usernameUniqueIndex": {
          "name": "usernameUniqueIndex",
          "columns": [
            {
              "expression": "lower(\"username\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "noNegativeCred": {
          "name": "noNegativeCred",
          "value": "\"users\".\"cred\" >= 0"
        },
        "usernameFormat": {
          "name": "usernameFormat",
          "value": "LENGTH(\"users\".\"username\") BETWEEN 3 AND 15\n          AND \"users\".\"username\" ~ '^[a-zA-Z0-9][_a-zA-Z0-9]*[a-zA-Z0-9]$'"
        }
      },
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.restake_action": {
      "name": "restake_action",
      "schema": "public",
      "values": [
        "created",
        "increased",
        "decreased",
        "deactivated"
      ]
    },
    "public.slash_action": {
      "name": "slash_action",
      "schema": "public",
      "values": [
        "created",
        "increased",
        "decreased",
        "deactivated"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.point_favor_history": {
      "columns": {},
      "definition": "with \"all_events\" as ((((((select \"id\" as point_id, \"created_at\" as event_time, 'point_created' as event_type from \"points\") union (select \"point_id\" as point_id, \"created_at\" as event_time, 'endorsement_made' as event_type from \"endorsements\")) union (select \"older_point_id\" as point_id, \"created_at\" as event_time, 'negation_made' as event_type from \"negations\")) union (select \"newer_point_id\" as point_id, \"created_at\" as event_time, 'negation_made' as event_type from \"negations\")) union (select CASE \n              WHEN \"negations\".\"older_point_id\" = \"endorsements\".\"point_id\" \n              THEN \"negations\".\"newer_point_id\"\n              ELSE \"negations\".\"older_point_id\"\n            END as point_id, \"endorsements\".\"created_at\" as event_time, 'negation_endorsed' as event_type from \"endorsements\" left join \"negations\" on (\n              (\"negations\".\"older_point_id\" = \"endorsements\".\"point_id\" OR \n               \"negations\".\"newer_point_id\" = \"endorsements\".\"point_id\")\n              AND \"negations\".\"created_at\" <= \"endorsements\".\"created_at\"\n            ))) union (select \"id\" as point_id, NOW() as event_time, 'favor_queried' as event_type from \"points\")) select \"all_events_with_stats\".point_id as \"point_id\", \"all_events_with_stats\".event_type as \"event_type\", \"all_events_with_stats\".event_time as \"event_time\", \"all_events_with_stats\".cred as \"cred\", \"all_events_with_stats\".negations_cred as \"negations_cred\", CAST(\n            CASE\n                WHEN \"all_events_with_stats\".cred = 0 THEN 0\n                WHEN \"all_events_with_stats\".negations_cred = 0 THEN 100\n                ELSE ROUND(100.0 * \"all_events_with_stats\".cred / (\"all_events_with_stats\".cred + \"all_events_with_stats\".negations_cred), 2)\n            END\n        AS NUMERIC) as \"favor\" from (select \"all_events\".point_id as \"point_id\", \"all_events\".event_type as \"event_type\", \"all_events\".event_time as \"event_time\", \n          COALESCE((\n            SELECT SUM(\"cred\")\n            FROM \"endorsements\"\n            WHERE \"point_id\" = \"all_events\".point_id\n            AND \"created_at\" <= \"all_events\".event_time\n          ), 0)\n         as \"cred\", \n          COALESCE((\n            SELECT SUM(\"cred\")\n            FROM \"endorsements\"\n            WHERE \"point_id\" IN (\n              SELECT newer_point_id\n              FROM \"negations\"\n              WHERE older_point_id = \"all_events\".point_id\n              AND \"created_at\" <= \"all_events\".event_time\n              UNION\n              SELECT older_point_id\n              FROM \"negations\"\n              WHERE newer_point_id = \"all_events\".point_id\n              AND \"created_at\" <= \"all_events\".event_time\n            ) AND \"created_at\" <= \"all_events\".event_time\n          ), 0)\n         as \"negations_cred\" from \"all_events\") \"all_events_with_stats\" order by \"all_events_with_stats\".event_time, \"all_events_with_stats\".point_id",
      "name": "point_favor_history",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    },
    "public.point_with_details_view": {
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_by": {
          "name": "created_by",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        }
      },
      "definition": "select \"id\", \"content\", \"created_at\", \"created_by\", \n        COALESCE((\n          SELECT COUNT(*)\n          FROM (\n            SELECT older_point_id AS point_id FROM \"negations\"\n            UNION ALL\n            SELECT newer_point_id AS point_id FROM \"negations\"\n          ) sub\n          WHERE point_id = \"points\".id\n        ), 0)\n       as \"amount_negations\", \n        COALESCE((\n          SELECT COUNT(DISTINCT \"user_id\")\n          FROM \"endorsements\"\n          WHERE \"point_id\" = \"points\".id\n        ), 0)\n       as \"amount_supporters\", \n        COALESCE((\n          SELECT SUM(\"cred\")\n          FROM \"endorsements\"\n          WHERE \"point_id\" = \"points\".id\n        ), 0)\n       as \"cred\", \n        COALESCE((\n          SELECT SUM(\"cred\")\n          FROM \"endorsements\"\n          WHERE \"point_id\" IN (\n            SELECT newer_point_id\n            FROM \"negations\"\n            WHERE older_point_id = \"points\".id\n            UNION\n            SELECT older_point_id\n            FROM \"negations\"\n            WHERE newer_point_id = \"points\".id\n          )\n        ), 0)\n       as \"negations_cred\", \n          ARRAY(\n            SELECT older_point_id\n            FROM \"negations\"\n            WHERE newer_point_id = \"points\".id\n            UNION\n            SELECT newer_point_id\n            FROM \"negations\"\n            WHERE older_point_id = \"points\".id\n          )\n         as \"negation_ids\" from \"points\"",
      "name": "point_with_details_view",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}